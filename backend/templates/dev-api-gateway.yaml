AWSTemplateFormatVersion: '2010-09-09'
Description: 'Dev API Gateway for Resume Optimizer - Points to Dev Lambda Functions'

Parameters:
  UserPoolId:
    Type: String
    Description: Cognito User Pool ID (use the same as prod)
    Default: us-east-1_PdEKfFD9v

Resources:
  # Dev API Gateway
  DevApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: ResumeOptimizerAPI-dev
      Description: Dev API Gateway for Resume Optimizer testing
      EndpointConfiguration:
        Types:
          - REGIONAL

  # Cognito Authorizer (reuse prod user pool)
  DevApiGatewayAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: ResumeOptimizerCognitoAuthorizer-dev
      RestApiId: !Ref DevApiGateway
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      ProviderARNs:
        - !Sub 'arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${UserPoolId}'

  # /optimize endpoint
  OptimizeResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DevApiGateway
      ParentId: !GetAtt DevApiGateway.RootResourceId
      PathPart: optimize

  OptimizeMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DevApiGateway
      ResourceId: !Ref OptimizeResource
      HttpMethod: POST
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref DevApiGatewayAuthorizer
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:ResumeOptimizerProcessor-dev/invocations'

  OptimizeOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DevApiGateway
      ResourceId: !Ref OptimizeResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false

  # /status endpoint
  StatusResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DevApiGateway
      ParentId: !GetAtt DevApiGateway.RootResourceId
      PathPart: status

  StatusMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DevApiGateway
      ResourceId: !Ref StatusResource
      HttpMethod: GET
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref DevApiGatewayAuthorizer
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:ResumeOptimizerStatusChecker-dev/invocations'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Origin: false

  StatusOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DevApiGateway
      ResourceId: !Ref StatusResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'GET,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false

  # /contact endpoint
  ContactResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DevApiGateway
      ParentId: !GetAtt DevApiGateway.RootResourceId
      PathPart: contact

  ContactMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DevApiGateway
      ResourceId: !Ref ContactResource
      HttpMethod: POST
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref DevApiGatewayAuthorizer
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:ResumeOptimizerContactHandler-dev/invocations'

  ContactOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DevApiGateway
      ResourceId: !Ref ContactResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false

  # /extract-job-url endpoint
  ExtractJobUrlResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref DevApiGateway
      ParentId: !GetAtt DevApiGateway.RootResourceId
      PathPart: extract-job-url

  ExtractJobUrlMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DevApiGateway
      ResourceId: !Ref ExtractJobUrlResource
      HttpMethod: POST
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId: !Ref DevApiGatewayAuthorizer
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:ResumeOptimizerJobUrlExtractor-dev/invocations'

  ExtractJobUrlOptionsMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref DevApiGateway
      ResourceId: !Ref ExtractJobUrlResource
      HttpMethod: OPTIONS
      AuthorizationType: NONE
      Integration:
        Type: MOCK
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
              method.response.header.Access-Control-Allow-Methods: "'POST,OPTIONS'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
        RequestTemplates:
          application/json: '{"statusCode": 200}'
      MethodResponses:
        - StatusCode: 200
          ResponseParameters:
            method.response.header.Access-Control-Allow-Headers: false
            method.response.header.Access-Control-Allow-Methods: false
            method.response.header.Access-Control-Allow-Origin: false

  # API Gateway Deployment
  DevApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - OptimizeMethod
      - OptimizeOptionsMethod
      - StatusMethod
      - StatusOptionsMethod
      - ContactMethod
      - ContactOptionsMethod
      - ExtractJobUrlMethod
      - ExtractJobUrlOptionsMethod
    Properties:
      RestApiId: !Ref DevApiGateway
      StageName: dev

  # Lambda Permissions for API Gateway
  OptimizeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:ResumeOptimizerProcessor-dev'
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${DevApiGateway}/*/POST/optimize'

  StatusLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:ResumeOptimizerStatusChecker-dev'
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${DevApiGateway}/*/GET/status'

  ContactLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:ResumeOptimizerContactHandler-dev'
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${DevApiGateway}/*/POST/contact'

  ExtractJobUrlLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Sub 'arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:ResumeOptimizerJobUrlExtractor-dev'
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${DevApiGateway}/*/POST/extract-job-url'

Outputs:
  DevApiGatewayUrl:
    Description: Dev API Gateway URL
    Value: !Sub 'https://${DevApiGateway}.execute-api.${AWS::Region}.amazonaws.com/dev'
    Export:
      Name: ResumeOptimizerDevApiUrl

  DevApiGatewayId:
    Description: Dev API Gateway ID
    Value: !Ref DevApiGateway
    Export:
      Name: ResumeOptimizerDevApiId